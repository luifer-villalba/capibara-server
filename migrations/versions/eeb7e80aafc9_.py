"""empty message

Revision ID: eeb7e80aafc9
Revises: 
Create Date: 2020-11-01 23:05:27.602180

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eeb7e80aafc9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    branch_list = op.create_table('branch',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.bulk_insert(
        branch_list,
        [
            {'code': 'ZULMI_1', 'name': 'Sucursal 1', 'description': '', 'address': 'Quinta Avda. c/ EEUU'},
            {'code': 'ZULMI_2', 'name': 'Sucursal 2', 'description': '', 'address': 'Teodoro S. Mongelos esq. Gral '
                                                                                    'Aquino'},
            {'code': 'ZULMI_3', 'name': 'Sucursal 3', 'description': '', 'address': 'Ana Diaz casi Tte Rojas Silva'},
            {'code': 'ZULMI_5', 'name': 'Sucursal 5', 'description': '', 'address': 'Paolo Alberzoni 1267'},
            {'code': 'ZULMI_6', 'name': 'Sucursal 6', 'description': '', 'address': ''},
        ]
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('balance',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('branch', sa.Integer(), nullable=True),
    sa.Column('today_cash', sa.Integer(), nullable=True),
    sa.Column('tomorrow_cash', sa.Integer(), nullable=True),
    sa.Column('calculated_sales', sa.Integer(), nullable=False),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('discount_day', sa.Boolean(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['branch'], ['branch.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cancelled_invoice',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_number', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('balance_id', sa.Integer(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['balance_id'], ['balance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cash',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('balance_id', sa.Integer(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['balance_id'], ['balance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('balance_id', sa.Integer(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['balance_id'], ['balance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('balance_id', sa.Integer(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['balance_id'], ['balance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment')
    op.drop_table('expense')
    op.drop_table('cash')
    op.drop_table('cancelled_invoice')
    op.drop_table('balance')
    op.drop_table('user')
    op.drop_table('branch')
    op.drop_table('blacklist_tokens')
    # ### end Alembic commands ###
